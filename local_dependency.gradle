//case: define global attribute
gradle.ext.localProject = []



def projectStrings = loadLocalProperties().get("local_project")
// read key-value from Properties
println("$projectStrings")
def projects = projectStrings.split(",")
for (def project : projects) {
    println("load project:$project")
    gradle.ext.localProject << project//case: append item to list
}
//case: read global attribute
println("gradle.ext.localProject=${gradle.ext.localProject}")


//case: parent dir of project
def baseDir = "${rootDir.parent}"
println("$baseDir")

//case: load local.properties into Properties
Properties loadLocalProperties() {
    def properties = new Properties()
    File file = new File(rootDir, "local.properties")
    if (file.exists()) {
        properties.load(file.newDataInputStream())
        if ("true" == properties.getProperty("local_compile")) {
            return properties
        }
    }
    return null
}